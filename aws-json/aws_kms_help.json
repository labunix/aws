KMS()                                                                    KMS()



NNAAMMEE
       kms -

DDEESSCCRRIIPPTTIIOONN
       AWS  Key  Management Service (AWS KMS) is an encryption and key manage-
       ment web service. This guide describes the AWS KMS operations that  you
       can  call  programmatically. For general information about AWS KMS, see
       the    `    _A_W_S    _K_e_y    _M_a_n_a_g_e_m_e_n_t    _S_e_r_v_i_c_e     _D_e_v_e_l_o_p_e_r     _G_u_i_d_e
       _h_t_t_p_s_:_/_/_d_o_c_s_._a_w_s_._a_m_a_z_o_n_._c_o_m_/_k_m_s_/_l_a_t_e_s_t_/_d_e_v_e_l_o_p_e_r_g_u_i_d_e_/
       `
       __ .

       NNOOTTEE::
          AWS provides SDKs that consist of libraries and sample code for var-
          ious programming languages and platforms (Java, Ruby,  .Net,  macOS,
          Android, etc.). The SDKs provide a convenient way to create program-
          matic access to AWS KMS and other AWS  services.  For  example,  the
          SDKs take care of tasks such as signing requests (see below), manag-
          ing errors, and retrying requests automatically. For  more  informa-
          tion about the AWS SDKs, including how to download and install them,
          see _T_o_o_l_s _f_o_r _A_m_a_z_o_n _W_e_b _S_e_r_v_i_c_e_s .

       We recommend that you use the AWS SDKs to make programmatic  API  calls
       to AWS KMS.

       Clients  must  support TLS (Transport Layer Security) 1.0. We recommend
       TLS 1.2. Clients must also support cipher suites with  Perfect  Forward
       Secrecy  (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic Curve
       Ephemeral Diffie-Hellman (ECDHE). Most modern systems such  as  Java  7
       and later support these modes.
          SSiiggnniinngg RReeqquueessttss

       Requests  must  be signed by using an access key ID and a secret access
       key. We strongly recommend that you _d_o _n_o_t use your AWS account  (root)
       access  key  ID and secret key for everyday work with AWS KMS. Instead,
       use the access key ID and secret access key for an IAM  user.  You  can
       also  use the AWS Security Token Service to generate temporary security
       credentials that you can use to sign requests.

       All AWS KMS operations require _S_i_g_n_a_t_u_r_e _V_e_r_s_i_o_n _4 .
          LLooggggiinngg AAPPII RReeqquueessttss

       AWS KMS supports AWS CloudTrail, a service that logs AWS API calls  and
       related  events  for your AWS account and delivers them to an Amazon S3
       bucket that you specify. By using the information collected  by  Cloud-
       Trail,  you  can determine what requests were made to AWS KMS, who made
       the request, when it was made, and so on. To learn  more  about  Cloud-
       Trail, including how to turn it on and find your log files, see the _A_W_S
       _C_l_o_u_d_T_r_a_i_l _U_s_e_r _G_u_i_d_e .
          AAddddiittiioonnaall RReessoouurrcceess

       For more information about credentials and  request  signing,  see  the
       following:

       +o _A_W_S  _S_e_c_u_r_i_t_y  _C_r_e_d_e_n_t_i_a_l_s  - This topic provides general information
         about the types of credentials used for accessing AWS.

       +o _T_e_m_p_o_r_a_r_y _S_e_c_u_r_i_t_y _C_r_e_d_e_n_t_i_a_l_s - This section of the _I_A_M  _U_s_e_r  _G_u_i_d_e
         describes how to create and use temporary security credentials.

       +o _S_i_g_n_a_t_u_r_e  _V_e_r_s_i_o_n  _4  _S_i_g_n_i_n_g _P_r_o_c_e_s_s - This set of topics walks you
         through the process of signing a request using an access key ID and a
         secret access key.
          CCoommmmoonnllyy UUsseedd AAPPII OOppeerraattiioonnss

       Of the API operations discussed in this guide, the following will prove
       the most useful for most applications. You will likely  perform  opera-
       tions  other  than these, such as creating keys and assigning policies,
       by using the console.

       +o Encrypt

       +o Decrypt

       +o GenerateDataKey

       +o GenerateDataKeyWithoutPlaintext

AAVVAAIILLAABBLLEE CCOOMMMMAANNDDSS
       +o cancel-key-deletion

       +o connect-custom-key-store

       +o create-alias

       +o create-custom-key-store

       +o create-grant

       +o create-key

       +o decrypt

       +o delete-alias

       +o delete-custom-key-store

       +o delete-imported-key-material

       +o describe-custom-key-stores

       +o describe-key

       +o disable-key

       +o disable-key-rotation

       +o disconnect-custom-key-store

       +o enable-key

       +o enable-key-rotation

       +o encrypt

       +o generate-data-key

       +o generate-data-key-pair

       +o generate-data-key-pair-without-plaintext

       +o generate-data-key-without-plaintext

       +o generate-random

       +o get-key-policy

       +o get-key-rotation-status

       +o get-parameters-for-import

       +o get-public-key

       +o help

       +o import-key-material

       +o list-aliases

       +o list-grants

       +o list-key-policies

       +o list-keys

       +o list-resource-tags

       +o list-retirable-grants

       +o put-key-policy

       +o re-encrypt

       +o retire-grant

       +o revoke-grant

       +o schedule-key-deletion

       +o sign

       +o tag-resource

       +o untag-resource

       +o update-alias

       +o update-custom-key-store

       +o update-key-description

       +o verify



                                                                         KMS()
