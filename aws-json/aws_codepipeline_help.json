CODEPIPELINE()                                                  CODEPIPELINE()



NNAAMMEE
       codepipeline -

DDEESSCCRRIIPPTTIIOONN
          OOvveerrvviieeww

       This  is  the  AWS  CodePipeline API Reference. This guide provides de-
       scriptions of the actions and data types  for  AWS  CodePipeline.  Some
       functionality for your pipeline can only be configured through the API.
       For more information, see the _A_W_S _C_o_d_e_P_i_p_e_l_i_n_e _U_s_e_r _G_u_i_d_e .

       You can use the AWS CodePipeline API to work  with  pipelines,  stages,
       actions, and transitions.
          _P_i_p_e_l_i_n_e_s  are  models of automated release processes. Each pipeline
          is uniquely named, and consists of stages, actions, and transitions.

       You can work with pipelines by calling:

       +o CreatePipeline , which creates a uniquely named pipeline.

       +o DeletePipeline , which deletes the specified pipeline.

       +o GetPipeline , which returns information about the pipeline  structure
         and  pipeline  metadata,  including the pipeline Amazon Resource Name
         (ARN).

       +o GetPipelineExecution , which returns information about a specific ex-
         ecution of a pipeline.

       +o GetPipelineState  , which returns information about the current state
         of the stages and actions of a pipeline.

       +o ListActionExecutions , which returns action-level  details  for  past
         executions.  The details include full stage and action-level details,
         including individual action duration, status,  any  errors  that  oc-
         curred  during  the execution, and input and output artifact location
         details.

       +o ListPipelines , which gets a summary of all of the pipelines  associ-
         ated with your account.

       +o ListPipelineExecutions , which gets a summary of the most recent exe-
         cutions for a pipeline.

       +o StartPipelineExecution , which runs the most recent  revision  of  an
         artifact through the pipeline.

       +o StopPipelineExecution  , which stops the specified pipeline execution
         from continuing through the pipeline.

       +o UpdatePipeline , which updates a pipeline with edits  or  changes  to
         the structure of the pipeline.

       Pipelines include _s_t_a_g_e_s . Each stage contains one or more actions that
       must complete before the next stage begins. A stage results in  success
       or  failure. If a stage fails, the pipeline stops at that stage and re-
       mains stopped until either a new version of an artifact appears in  the
       source  location, or a user takes action to rerun the most recent arti-
       fact through the pipeline. You can call  GetPipelineState , which  dis-
       plays  the  status of a pipeline, including the status of stages in the
       pipeline, or  GetPipeline , which returns the entire structure  of  the
       pipeline,  including  the stages of that pipeline. For more information
       about the structure of stages and actions, see _A_W_S  _C_o_d_e_P_i_p_e_l_i_n_e  _P_i_p_e_-
       _l_i_n_e _S_t_r_u_c_t_u_r_e _R_e_f_e_r_e_n_c_e .

       Pipeline  stages  include  _a_c_t_i_o_n_s that are categorized into categories
       such as source or build actions performed in a stage of a pipeline. For
       example,  you  can use a source action to import artifacts into a pipe-
       line from a source such as Amazon S3. Like stages, you do not work with
       actions directly in most cases, but you do define and interact with ac-
       tions when working with pipeline operations such as  CreatePipeline and
       GetPipelineState . Valid action categories are:

       +o Source

       +o Build

       +o Test

       +o Deploy

       +o Approval

       +o Invoke

       Pipelines  also include _t_r_a_n_s_i_t_i_o_n_s , which allow the transition of ar-
       tifacts from one stage to the next in a pipeline after the  actions  in
       one stage complete.

       You can work with transitions by calling:

       +o DisableStageTransition  , which prevents artifacts from transitioning
         to the next stage in a pipeline.

       +o EnableStageTransition , which enables transition of artifacts between
         stages in a pipeline.
          UUssiinngg tthhee AAPPII ttoo iinntteeggrraattee wwiitthh AAWWSS CCooddeePPiippeelliinnee

       For  third-party integrators or developers who want to create their own
       integrations with AWS CodePipeline, the expected sequence  varies  from
       the  standard  API user. To integrate with AWS CodePipeline, developers
       need to work with the following items:
          JJoobbss , which are instances of an action. For example, a  job  for  a
          source action might import a revision of an artifact from a source.

       You can work with jobs by calling:

       +o AcknowledgeJob , which confirms whether a job worker has received the
         specified job.

       +o GetJobDetails , which returns the details of a job.

       +o PollForJobs , which determines whether there are any jobs to act on.

       +o PutJobFailureResult , which provides details of a job failure.

       +o PutJobSuccessResult , which provides details of a job success.
          TThhiirrdd ppaarrttyy jjoobbss , which are instances of an  action  created  by  a
          partner action and integrated into AWS CodePipeline. Partner actions
          are created by members of the AWS Partner Network.

       You can work with third party jobs by calling:

       +o AcknowledgeThirdPartyJob , which confirms whether a  job  worker  has
         received the specified job.

       +o GetThirdPartyJobDetails  ,  which requests the details of a job for a
         partner action.

       +o PollForThirdPartyJobs , which determines whether there are  any  jobs
         to act on.

       +o PutThirdPartyJobFailureResult , which provides details of a job fail-
         ure.

       +o PutThirdPartyJobSuccessResult , which provides details of a job  suc-
         cess.

AAVVAAIILLAABBLLEE CCOOMMMMAANNDDSS
       +o acknowledge-job

       +o acknowledge-third-party-job

       +o create-custom-action-type

       +o create-pipeline

       +o delete-custom-action-type

       +o delete-pipeline

       +o delete-webhook

       +o deregister-webhook-with-third-party

       +o disable-stage-transition

       +o enable-stage-transition

       +o get-job-details

       +o get-pipeline

       +o get-pipeline-execution

       +o get-pipeline-state

       +o get-third-party-job-details

       +o help

       +o list-action-executions

       +o list-action-types

       +o list-pipeline-executions

       +o list-pipelines

       +o list-tags-for-resource

       +o list-webhooks

       +o poll-for-jobs

       +o poll-for-third-party-jobs

       +o put-action-revision

       +o put-approval-result

       +o put-job-failure-result

       +o put-job-success-result

       +o put-third-party-job-failure-result

       +o put-third-party-job-success-result

       +o put-webhook

       +o register-webhook-with-third-party

       +o retry-stage-execution

       +o start-pipeline-execution

       +o stop-pipeline-execution

       +o tag-resource

       +o untag-resource

       +o update-pipeline



                                                                CODEPIPELINE()
